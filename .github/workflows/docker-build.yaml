name: Docker Build and Push

on:
  push:
    branches:
      - main
      - dev
      - 0-1-0
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - dev
      - 0-1-0

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          # 为分支推送生成标签，并自动清理非法字符 (e.g., feature/new -> feature-new)
          type=ref,event=branch,sanitize=true
          # 为PR生成标签 (e.g., pr-123)
          type=ref,event=pr,sanitize=true
          # 为Git标签生成SemVer标签 (e.g., v1.2.3 -> 1.2.3, 1.2, 1)
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          # 为每次构建生成一个基于commit SHA的短标签 (e.g., f18c573)
          type=sha,format=short
          # 仅当事件发生在默认分支 (main) 时，才添加 "latest" 标签
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64